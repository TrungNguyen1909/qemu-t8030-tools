diff --git a/configure.ac b/configure.ac
index 3815275..7a3b6bc 100644
--- a/configure.ac
+++ b/configure.ac
@@ -37,6 +37,7 @@ AM_PROG_CC_C_O
 LT_INIT

 # Checks for libraries.
+AC_SEARCH_LIBS([pthread_create], [pthread])
 PKG_CHECK_MODULES(libirecovery, libirecovery-1.0 >= $LIBIRECOVERY_VERSION)
 PKG_CHECK_MODULES(libimobiledevice, libimobiledevice-1.0 >= $LIBIMOBILEDEVICE_VERSION)
 PKG_CHECK_MODULES(libplist, libplist-2.0 >= $LIBPLIST_VERSION)
diff --git a/src/asr.c b/src/asr.c
index a1aba76..7535bd0 100644
--- a/src/asr.c
+++ b/src/asr.c
@@ -256,16 +256,17 @@ int asr_perform_validation(asr_client_t asr, const char* filesystem)
 	while (1) {
 		if (asr_receive(asr, &packet) < 0) {
 			error("ERROR: Unable to receive validation packet\n");
-			return -1;
 		}

 		if (packet == NULL) {
-			if (attempts < 5) {
+			if (attempts < 10) {
 				info("Retrying to receive validation packet... %d\n", attempts);
 				attempts++;
 				sleep(1);
 				continue;
 			}
+			error("ERROR: Unable to receive validation packet\n");
+			return -1;
 		}

 		attempts = 0;
@@ -378,7 +379,7 @@ int asr_send_payload(asr_client_t asr, const char* filesystem)

 	int size = 0;
 	i = length;
-	int retry = 3;
+	int retry = 10;
 	while(i > 0 && retry >= 0) {
 		size = ASR_PAYLOAD_CHUNK_SIZE;
 		if (i < ASR_PAYLOAD_CHUNK_SIZE) {
diff --git a/src/idevicerestore.c b/src/idevicerestore.c
index b0572ca..b0b6a9e 100644
--- a/src/idevicerestore.c
+++ b/src/idevicerestore.c
@@ -1033,6 +1033,11 @@ int idevicerestore_start(struct idevicerestore_client_t* client)
 	}

 	idevicerestore_progress(client, RESTORE_STEP_PREPARE, 0.2);
+	if (client->mode == MODE_RESTORE) {
+		if (client->flags & FLAG_ALLOW_RESTORE_MODE) {
+			tss_enabled = 0;
+		}
+	}

 	/* retrieve shsh blobs if required */
 	if (tss_enabled) {
diff --git a/src/restore.c b/src/restore.c
index 257cc38..601e80c 100644
--- a/src/restore.c
+++ b/src/restore.c
@@ -302,6 +302,15 @@ irecv_device_t restore_get_irecv_device(struct idevicerestore_client_t* client)
 	}

 	plist_get_string_val(node, &model);
+	fprintf(stderr, "%s: Found model %s\n", __func__, model);
+
+	/* HACK: Replace DEV devices with AP equivalent devices
+	 * So that it can enjoy FDR-less restore
+	 */
+	if (strstr(model, "DEV")) {
+		strncpy(strstr(model, "DEV"), "AP\0", 3);
+	}
+
 	irecv_devices_get_device_by_hardware_model(model, &irecv_device);
 	free(model);
